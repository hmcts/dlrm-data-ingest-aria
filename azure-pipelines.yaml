trigger:
  batch: true
  branches:
    include:
      - main

pr:
  - main

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: hmcts

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

  - name: environment_components
    type: object
    default:
      - deployment: sbox_aria
        environment: sbox
        component: aria-layer
        service_connection: DTS-DATAINGEST-SBOX
        dependsOn: Precheck
      - deployment: stg_aria
        environment: stg
        component: aria-layer
        service_connection: DTS-DATAINGEST-STG
        dependsOn: sbox_aria
      - deployment: prod_aria
        environment: prod
        component: aria-layer
        service_connection: DTS-DATAINGEST-PROD
        dependsOn: stg_aria

variables:
  - group: ARIA-TEST-group
  - name: timeoutInMinutes
    value: 240
  - name: agentImage
    value: ubuntu-latest
  - name: product
    value: dlrm-ingest
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - stage: Precheck
    jobs:
      - job: TerraformPrecheck
        pool:
          vmImage: ${{ variables.agentImage }}

        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: infra-vault-nonprod
              keyvaultSecret: azure-devops-sp-token
              serviceConnection: azurerm-sandbox
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each deployment in parameters.environment_components }}:
      - stage: ${{ deployment.deployment }}
        variables:
          - group: ARIA-TEST-group
        dependsOn: ${{ deployment.dependsOn }}
        jobs:
          - job: waitForValidation
            pool: server
            displayName: Wait for external validation
            steps:
              - ${{ if or(eq(deployment.environment, 'stg'), eq(deployment.environment, 'prod')) }}:
                  - task: ManualValidation@1
                    timeoutInMinutes: 23160 # 2 weeks
                    inputs:
                      approvers: jason.dynes1@HMCTS.net, andrew.mcdevitt@hmcts.net, ara.islam1@hmcts.net
                      instructions: Please validate the build configuration and resume

          - job: TerraformPlanApply
            displayName: Terraform Plan Apply
            dependsOn: waitForValidation
            pool:
              ${{ if eq(deployment.environment, 'sbox') }}:
                name: hmcts-sds-ptlsbox
              ${{ else }}:
                name: hmcts-sds-ptl
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}

            variables:  # These are pipeline variables to be exported in step below before being passed into TF via template envVar input
              - ${{ if eq(deployment.environment, 'sbox') }}:
                - name: ClientId
                  value: $(sbox_client_id)
                - name: ClientSecret
                  value: $(sbox_client_secret)
                - name: TenantId
                  value: $(sbox_tenant_id)
                - name: TenantURL
                  value: $(sbox_tenant_url)
              - ${{ elseif eq(deployment.environment, 'stg') }}:
                - name: ClientId
                  value: $(stg_client_id)
                - name: ClientSecret
                  value: $(stg_client_secret)
                - name: TenantId
                  value: $(stg_tenant_id)
                - name: TenantURL
                  value: $(stg_tenant_url)
              - ${{ elseif eq(deployment.environment, 'prod') }}:
                - name: ClientId
                  value: $(prod_client_id)
                - name: ClientSecret
                  value: $(prod_client_secret)
                - name: TenantId
                  value: $(prod_tenant_id)
                - name: TenantURL
                  value: $(prod_tenant_url)

            steps:
              - script: |
                  echo "TF_VAR_client_id: $(ClientId)"
                  echo "TF_VAR_client_secret: $(ClientSecret)"
                  echo "TF_VAR_tenant_id: $(TenantId)"
                  echo "TF_VAR_sbox_tenant: $(TenantURL)"
                displayName: 'Set Terraform Variables'

              - template: steps/terraform.yaml@cnp-azuredevops-libraries
                parameters:
                  overrideAction: ${{ parameters.overrideAction }}
                  environment: ${{ deployment.environment }}
                  component: ${{ deployment.component }}
                  serviceConnection: ${{ deployment.service_connection }}
                  terraformInitSubscription: ${{ variables.terraformInitSubscription }}
                  product: ${{ variables.product }}
                  planCommandOptions: -compact-warnings
                  terraformEnvironmentVariables:
                    TF_VAR_ClientId: $(ClientId)
                    TF_VAR_ClientSecret: $(ClientSecret)
                    TF_VAR_TenantId: $(TenantId)
                    TF_VAR_TenantURL: $(TenantURL)
                    TF_VAR_env: ${{ deployment.environment }}
